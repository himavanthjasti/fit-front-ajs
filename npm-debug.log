0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'install', '-g', 'jstags' ]
2 info using npm@1.4.28
3 info using node@v0.10.37
4 verbose node symlink /usr/bin/node
5 verbose cache add [ 'jstags', null ]
6 verbose cache add name=undefined spec="jstags" args=["jstags",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: 'jstags',
7 verbose parsed url   path: 'jstags',
7 verbose parsed url   href: 'jstags' }
8 silly lockFile 5b5ef691-jstags jstags
9 verbose lock jstags /home/vagrant/.npm/5b5ef691-jstags.lock
10 silly lockFile 5b5ef691-jstags jstags
11 silly lockFile 5b5ef691-jstags jstags
12 verbose addNamed [ 'jstags', '' ]
13 verbose addNamed [ null, '*' ]
14 silly lockFile c1d7f60e-jstags jstags@
15 verbose lock jstags@ /home/vagrant/.npm/c1d7f60e-jstags.lock
16 silly addNameRange { name: 'jstags', range: '*', hasData: false }
17 verbose request where is /jstags
18 verbose request registry https://registry.npmjs.org/
19 verbose request id 9d3d64feae54a8bd
20 verbose url raw /jstags
21 verbose url resolving [ 'https://registry.npmjs.org/', './jstags' ]
22 verbose url resolved https://registry.npmjs.org/jstags
23 verbose request where is https://registry.npmjs.org/jstags
24 info trying registry request attempt 1 at 07:34:48
25 verbose etag "5BQEGY9F32K2B4R1W31T7TJRA"
26 http GET https://registry.npmjs.org/jstags
27 http 304 https://registry.npmjs.org/jstags
28 silly registry.get cb [ 304,
28 silly registry.get   { date: 'Wed, 12 Aug 2015 07:44:13 GMT',
28 silly registry.get     via: '1.1 varnish',
28 silly registry.get     'cache-control': 'max-age=60',
28 silly registry.get     etag: '"5BQEGY9F32K2B4R1W31T7TJRA"',
28 silly registry.get     age: '58',
28 silly registry.get     connection: 'keep-alive',
28 silly registry.get     'x-served-by': 'cache-sin6924-SIN',
28 silly registry.get     'x-cache': 'HIT',
28 silly registry.get     'x-cache-hits': '1',
28 silly registry.get     'x-timer': 'S1439365453.146864,VS0,VE0',
28 silly registry.get     vary: 'Accept' } ]
29 verbose etag https://registry.npmjs.org/jstags from cache
30 silly addNameRange number 2 { name: 'jstags', range: '*', hasData: true }
31 silly addNameRange versions [ 'jstags', [ '0.0.1', '0.0.2' ] ]
32 verbose addNamed [ 'jstags', '0.0.2' ]
33 verbose addNamed [ '0.0.2', '0.0.2' ]
34 silly lockFile 533b88c5-jstags-0-0-2 jstags@0.0.2
35 verbose lock jstags@0.0.2 /home/vagrant/.npm/533b88c5-jstags-0-0-2.lock
36 silly lockFile 533b88c5-jstags-0-0-2 jstags@0.0.2
37 silly lockFile 533b88c5-jstags-0-0-2 jstags@0.0.2
38 silly lockFile c1d7f60e-jstags jstags@
39 silly lockFile c1d7f60e-jstags jstags@
40 silly resolved [ { name: 'jstags',
40 silly resolved     version: '0.0.2',
40 silly resolved     description: 'ctags-like tag generator for JavaScript and Node.js',
40 silly resolved     main: 'index.js',
40 silly resolved     scripts: { test: 'tap test' },
40 silly resolved     bin: { jstags: './bin/jstags' },
40 silly resolved     repository: { type: 'git', url: 'https://github.com/othiym23/jstags.git' },
40 silly resolved     keywords:
40 silly resolved      [ 'esprima',
40 silly resolved        'ctags',
40 silly resolved        'ast',
40 silly resolved        'vim',
40 silly resolved        'javascript',
40 silly resolved        'analysis',
40 silly resolved        'source' ],
40 silly resolved     author: { name: 'Forrest L Norvell', email: 'ogd@aoaioxxysz.net' },
40 silly resolved     license: 'BSD',
40 silly resolved     dependencies: { esprima: '~1.0.2', estraverse: '0.0.3', optimist: '~0.3.5' },
40 silly resolved     devDependencies: { tap: '~0.3.2' },
40 silly resolved     readme: '## jstags\n\nUsing tagbar in vim is awesome. Using ctags with JavaScript is not awesome.\n`jstags` uses the power of [Esprima](http://esprima.org) to make tagbar more\nawesome.\n\n### installation\n\n```\nnpm install -g jstags\n```\n\n### usage\n\n```\njstags *.js\n```\n\nRight now, the results just get dumped to stdout. Eventually it\'ll be closer\nto command-line compatible with Exuberant CTags. Probably after it actually works.\n',
40 silly resolved     readmeFilename: 'README.md',
40 silly resolved     _id: 'jstags@0.0.2',
40 silly resolved     dist:
40 silly resolved      { shasum: 'f5c5ec1294bbdd80527ffb190b59be3425eea47c',
40 silly resolved        tarball: 'http://registry.npmjs.org/jstags/-/jstags-0.0.2.tgz' },
40 silly resolved     _npmVersion: '1.1.65',
40 silly resolved     _npmUser: { name: 'othiym23', email: 'ogd@aoaioxxysz.net' },
40 silly resolved     maintainers: [ [Object] ],
40 silly resolved     directories: {},
40 silly resolved     _shasum: 'f5c5ec1294bbdd80527ffb190b59be3425eea47c',
40 silly resolved     _from: 'jstags@',
40 silly resolved     _resolved: 'https://registry.npmjs.org/jstags/-/jstags-0.0.2.tgz',
40 silly resolved     bugs: { url: 'https://github.com/othiym23/jstags/issues' },
40 silly resolved     homepage: 'https://github.com/othiym23/jstags' } ]
41 info install jstags@0.0.2 into /usr/lib
42 info installOne jstags@0.0.2
43 verbose lib/node_modules/jstags unbuild
44 verbose tar unpack /home/vagrant/.npm/jstags/0.0.2/package.tgz
45 silly lockFile 818d0a7c-tar-usr-lib-node-modules-jstags tar:///usr/lib/node_modules/jstags
46 verbose lock tar:///usr/lib/node_modules/jstags /home/vagrant/.npm/818d0a7c-tar-usr-lib-node-modules-jstags.lock
47 silly lockFile abcd252d-ant-npm-jstags-0-0-2-package-tgz tar:///home/vagrant/.npm/jstags/0.0.2/package.tgz
48 verbose lock tar:///home/vagrant/.npm/jstags/0.0.2/package.tgz /home/vagrant/.npm/abcd252d-ant-npm-jstags-0-0-2-package-tgz.lock
49 silly gunzTarPerm modes [ '775', '664' ]
50 error Error: EACCES, mkdir '/usr/lib/node_modules/jstags'
50 error  { [Error: EACCES, mkdir '/usr/lib/node_modules/jstags']
50 error   errno: 3,
50 error   code: 'EACCES',
50 error   path: '/usr/lib/node_modules/jstags',
50 error   fstream_type: 'Directory',
50 error   fstream_path: '/usr/lib/node_modules/jstags',
50 error   fstream_class: 'DirWriter',
50 error   fstream_stack:
50 error    [ '/usr/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23',
50 error      '/usr/lib/node_modules/npm/node_modules/mkdirp/index.js:46:53',
50 error      'Object.oncomplete (fs.js:108:15)' ] }
51 error Please try running this command again as root/Administrator.
52 error System Linux 3.13.0-55-generic
53 error command "/usr/bin/node" "/usr/bin/npm" "install" "-g" "jstags"
54 error cwd /home/vagrant/www/fit-front/practo-fit
55 error node -v v0.10.37
56 error npm -v 1.4.28
57 error path /usr/lib/node_modules/jstags
58 error fstream_path /usr/lib/node_modules/jstags
59 error fstream_type Directory
60 error fstream_class DirWriter
61 error code EACCES
62 error errno 3
63 error stack Error: EACCES, mkdir '/usr/lib/node_modules/jstags'
64 error fstream_stack /usr/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23
64 error fstream_stack /usr/lib/node_modules/npm/node_modules/mkdirp/index.js:46:53
64 error fstream_stack Object.oncomplete (fs.js:108:15)
65 verbose exit [ 3, true ]
